# 参与 deeplearnjs开源项目的工具准备

​	工欲善其事，必先利其器。参与开源项目首先要了解其他参与者使用的是什么样的工具，并且熟悉这些工具。事实上，工具不熟悉也是阻碍大家参与开源项目的第一个障碍。代码不知人家是怎么组织，怎么编译和运行测试的，当然就无法参与开发。现将自己这几天学习的结果总结如下：

1. ​	`git`——版本管理和控制的客户端工具，和github配合使用。
2. ​	`github`——版本管理库和开发者社区，可以部署自己的博客站点，和其他开发者交流，托管自己的代码，查看他人代码，与他人合作开发。
3. ​	`nodejs`——使用其`npm`包管理工具安装、管理工具，运行js脚本文件实现前端js项目的编译、构建等自动化工作，实现简单的web服务器等。deeplearnjs开源项目代码的编译构建就是通过 node 运行 ./scripts 文件夹下的脚本实现的。
4. ​	`typescript`——以面向对象优雅的方式写js代码，其代码文件扩展名是ts，通过编译可以生成指定标准如ES3、ES5、ES6的js代码。 deeplearnjs开源项目的代码就是用 typescript 写的。
5. ​	`Visual  Studio Code`——微软的跨平台代码编辑器，用来编写 typescript。
6. ​	`winmerge`——Windows平台下的文件比较合并工具，用于查看代码修改和合并代码。

------

​	除了上面的工具，为了方便在`github pages`上面发表自己的博客，选择了下面的便于写作的工具：

1. ​	`ruby`——jekyll的开发工具。其`gem`工具类似于nodejs的npm，可能需要升级才能升级。
2. ​	`jekyll`——将纯文本转化为静态网站和博客的工具。
3. ​	`markdown`——一种便于写作和排版的标记语言。
4. ​	`typora`——支持markdown标记语言的编辑器。

​	博客站点也用git来进行版本管理，不怕写错，不怕丢失。在自己电脑上完成写作和预览，满意后可以推送到github，然后通过github pages 提供的域名发布。

​	大体上就是这些了。后面如果有，就再进行补充。

​	刚才学生说用的是 `git+hexo+github`，`hexo`是基于nodejs的，这样就不用安装 ruby 了，环境准备应该更简单一些。

​	下面练习往博客中插入一副图片：

![博客测试截图]({{ site.url }}/assets/myblog.png)